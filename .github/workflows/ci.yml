name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_and_publish_macos:
    runs-on: macos-latest
    outputs:
      version: ${{ steps.extract_version.outputs.VERSION }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean verify -Djarsigner.skip=true

      - name: Extract version number
        id: extract_version
        run: |
          version=$(ls releng/com.espressif.idf.product/target/products/Espressif-IDE-*.tar.gz | sed -E 's/.*Espressif-IDE-([0-9]+\.[0-9]+\.[0-9]+)-.*/\1/' | head -n 1)
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "VERSION=$version" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        if: ${{ !cancelled() }}
        run: |
          for platform in \
            "com.espressif.idf.update-${VERSION}:releng/com.espressif.idf.update/target/repository" \
            "Espressif-IDE-${VERSION}-win32:releng/com.espressif.idf.product/target/products/Espressif-IDE-${VERSION}-win32.win32.x86_64.zip" \
            "Espressif-IDE-${VERSION}-linux.gtk.x86_64:releng/com.espressif.idf.product/target/products/Espressif-IDE-${VERSION}-linux.gtk.x86_64.tar.gz" \
            "Espressif-IDE-${VERSION}-linux.gtk.aarch64:releng/com.espressif.idf.product/target/products/Espressif-IDE-${VERSION}-linux.gtk.aarch64.tar.gz"; do
            name=${platform%%:*}
            path=${platform##*:}
            echo "Uploading $name"
            gh actions upload-artifact --name "$name" --path "$path"
          done

      - name: Codesign and create DMGs (macOS)
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          /usr/bin/security create-keychain -p espressif build.keychain
          /usr/bin/security default-keychain -s build.keychain
          /usr/bin/security unlock-keychain -p espressif build.keychain
          /usr/bin/security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          /usr/bin/security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k espressif build.keychain

          for arch in x86_64 aarch64; do
            /usr/bin/codesign --entitlements $PWD/releng/com.espressif.idf.product/entitlements/espressif-ide.entitlement \
              --options runtime --force -s "ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD. (QWXF6GB4AV)" \
              $PWD/releng/com.espressif.idf.product/target/products/com.espressif.idf.product/macosx/cocoa/$arch/Espressif-IDE.app -v
            /usr/bin/codesign -v -vvv --deep $PWD/releng/com.espressif.idf.product/target/products/com.espressif.idf.product/macosx/cocoa/$arch/Espressif-IDE.app

            $PWD/releng/ide-dmg-builder/ide-dmg-builder${arch == "aarch64" && "-aarch64" || ""}.sh
            /usr/bin/codesign --options runtime --force -s "ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD. (QWXF6GB4AV)" \
              $PWD/releng/ide-dmg-builder/Espressif-IDE-macosx-cocoa-$arch.dmg -v
            /usr/bin/codesign -v -vvv --deep $PWD/releng/ide-dmg-builder/Espressif-IDE-macosx-cocoa-$arch.dmg

            gh actions upload-artifact --name Espressif-IDE-${VERSION}-macosx.cocoa-$arch --path $PWD/releng/ide-dmg-builder/Espressif-IDE-macosx-cocoa-$arch.dmg
          done

  build_and_test:
    strategy:
      matrix:
        os: [linux, windows]
      fail-fast: false
    runs-on: ${{ matrix.os == 'linux' && 'self-hosted, eclipse, BrnoUBU0004' || 'self-hosted, eclipseUpd, BrnoWIN0007' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Tests
        run: |
          export NO_AT_BRIDGE=1
          mvn verify -Djarsigner.skip=true -DskipTests=false -DtestWorkspace=${{ matrix.os == 'linux' && '/opt/actions-runner/_work/workspace' || 'C:/actions-runner/_work/workspace' }}

      - name: Publish Test Reports
        if: ${{ always() }}
        uses: phoenix-actions/test-reporting@v12
        with:
          name: ${{ matrix.os == 'linux' && 'Linux Test Reports' || 'Windows Test Reports' }}
          path: tests/*/*/*/TEST-*.xml
          reporter: java-junit
