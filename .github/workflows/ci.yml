# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:


    runs-on: ubuntu-latest
      #- self-hosted
      #- eclipse

    steps:
    - uses: actions/checkout@v2
   
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

# Cloning required for the idf tools for tests
    - name: Clone IDF Release From Github
      uses: actions/checkout@v2
      with:
        repository: espressif/esp-idf
        path: dependencies/idf-tools
        ref: v4.4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.9'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.2
      with:
        maven-version: 3.8.4

    - name: Setup xvfb and lxde
      run: sudo apt-get install xvfb lxde #libswt-gtk-4-jni #lubuntu-desktop

    - name: set display & build
      run: |
           export DISPLAY=:19
           Xvfb :19 -screen 0 1024x768x16 & 
           sleep 10
           exec startlxde &
           sleep 30
           mvn clean verify -Djarsigner.skip=true -Dtycho.showEclipseLog=true
           
           

#    - name: Start virtual frame buffer
#      run: Xvfb :19 -screen 0 1024x768x16 & sleep 15 #& fluxbox #& x11vnc -display :19 -bg -nopw -xkb #& mvn clean verify -Djarsigner.skip=true -Dtycho.showEclipseLog=true

#    - name: Start lubuntu-desktop env
#      run: xvfb-run exec startlxde

#    - name: Start fluxbox and build
#      run: xvfb-run fluxbox & xvfb-run mvn clean verify -Djarsigner.skip=true -Dtycho.showEclipseLog=true

#    - name: Run headless test
#      uses: GabrielBB/xvfb-action@v1
#      with:
#        run: mvn clean verify -Djarsigner.skip=true -Dtycho.showEclipseLog=true
#        working-directory: ${{ env.workdir }}

#    - name: Build with Maven
#      run: mvn clean verify -Djarsigner.skip=true -Dtycho.showEclipseLog=true

    - name: Publish Test Reports
      if: ${{ always() }}
      uses: scacap/action-surefire-report@v1
  
    - name: Create macosx dmg
      run: $PWD/releng/ide-dmg-builder/ide-dmg-builder.sh

    - name: Upload build artifacts
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: com.espressif.idf.update
        path: releng/com.espressif.idf.update/target/repository
        
    - name: Upload windows rcp
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: espressif-ide-win32
        path: releng/com.espressif.idf.product/target/products/Espressif-IDE-*-win32.win32.x86_64.zip

    - name: Upload macOS rcp
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: espressif-ide-macosx
        path: releng/com.espressif.idf.product/target/products/Espressif-IDE-*-macosx.cocoa.x86_64.tar.gz

    - name: Upload linux rcp
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: espressif-ide-linux
        path: releng/com.espressif.idf.product/target/products/Espressif-IDE-*-linux.gtk.x86_64.tar.gz
    
    - name: Upload macosx dmg
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: espressif-ide-macosx-dmg
        path: releng/ide-dmg-builder/Espressif-IDE.dmg
  