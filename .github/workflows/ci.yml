# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: macos-latest
      # - self-hosted
      # - eclipse
    
    steps:
    - uses: actions/checkout@v2

    - name: Clone IDF Release From Github
      uses: actions/checkout@v2
      with:
        repository: espressif/esp-idf
        path: dependencies/idf-tools
        submodules: 'true'
        ref: v4.4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.9'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.2
      with:
        maven-version: 3.8.4
   
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean verify -Djarsigner.skip=true -Dmaven.test.skip=true

    - name: Codesign executable
      env: 
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        /usr/bin/security create-keychain -p espressif build.keychain
        /usr/bin/security default-keychain -s build.keychain
        /usr/bin/security unlock-keychain -p espressif build.keychain
        /usr/bin/security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        /usr/bin/security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k espressif build.keychain
        /usr/bin/codesign --force -s "ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD. (QWXF6GB4AV)" /opt/actions-runner/_work/idf-eclipse-plugin/idf-eclipse-plugin/releng/com.espressif.idf.product/target/products/com.espressif.idf.product/macosx/cocoa/x86_64/Espressif-IDE.app -v
        /usr/bin/codesign -v -vvv --deep /opt/actions-runner/_work/idf-eclipse-plugin/idf-eclipse-plugin/releng/com.espressif.idf.product/target/products/com.espressif.idf.product/macosx/cocoa/x86_64/Espressif-IDE.app

    - name: Publish Test Reports
      if: ${{ always() }}
      uses: scacap/action-surefire-report@v1
  
    # - name: Create macosx dmg
    #   run: genisoimage -V espressif-ide -D -R -apple -no-pad -o /opt/actions-runner/_work/idf-eclipse-plugin/idf-eclipse-plugin/releng/ide-dmg-builder/Espressif-IDE.dmg /opt/actions-runner/_work/idf-eclipse-plugin/idf-eclipse-plugin/releng/com.espressif.idf.product/target/products/com.espressif.idf.product/macosx/cocoa/x86_64/Espressif-IDE.app
           
    - name: Upload build artifacts
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: com.espressif.idf.update
        path: releng/com.espressif.idf.update/target/repository
        
    - name: Upload windows rcp
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: espressif-ide-win32
        path: releng/com.espressif.idf.product/target/products/Espressif-IDE-*-win32.win32.x86_64.zip

    - name: Upload macOS rcp
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: espressif-ide-macosx
        path: releng/com.espressif.idf.product/target/products/Espressif-IDE-*-macosx.cocoa.x86_64.tar.gz

    - name: Upload linux rcp
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: espressif-ide-linux
        path: releng/com.espressif.idf.product/target/products/Espressif-IDE-*-linux.gtk.x86_64.tar.gz
    
    # - name: Upload macosx dmg
    #   if: ${{ !cancelled() }}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: espressif-ide-macosx-dmg
    #     path: releng/ide-dmg-builder/Espressif-IDE.dmg
