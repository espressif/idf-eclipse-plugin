/**
 * generated by Xtext 2.28.0
 */
package com.espressif.idf.componen.iDFComponentDsl.impl;

import com.espressif.idf.componen.iDFComponentDsl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class IDFComponentDslFactoryImpl extends EFactoryImpl implements IDFComponentDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static IDFComponentDslFactory init()
  {
    try
    {
      IDFComponentDslFactory theIDFComponentDslFactory = (IDFComponentDslFactory)EPackage.Registry.INSTANCE.getEFactory(IDFComponentDslPackage.eNS_URI);
      if (theIDFComponentDslFactory != null)
      {
        return theIDFComponentDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new IDFComponentDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IDFComponentDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case IDFComponentDslPackage.COMPONENT_MODEL: return createComponentModel();
      case IDFComponentDslPackage.TYPE: return createType();
      case IDFComponentDslPackage.DESCRIPTION: return createDescription();
      case IDFComponentDslPackage.VERSION_INFO: return createVersionInfo();
      case IDFComponentDslPackage.URL: return createURL();
      case IDFComponentDslPackage.COMMENT: return createCOMMENT();
      case IDFComponentDslPackage.DEPENDENCIES_COMP: return createDependenciesComp();
      case IDFComponentDslPackage.FEATURE: return createFeature();
      case IDFComponentDslPackage.IDF: return createIDF();
      case IDFComponentDslPackage.COMPONENT_NAME: return createCOMPONENT_NAME();
      case IDFComponentDslPackage.COMPONENT_NAME_FEATURE: return createCOMPONENT_NAME_FEATURE();
      case IDFComponentDslPackage.PUBLIC: return createPUBLIC();
      case IDFComponentDslPackage.OVERRIDE_PATH: return createOVERRIDE_PATH();
      case IDFComponentDslPackage.RULES: return createRULES();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComponentModel createComponentModel()
  {
    ComponentModelImpl componentModel = new ComponentModelImpl();
    return componentModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Description createDescription()
  {
    DescriptionImpl description = new DescriptionImpl();
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VersionInfo createVersionInfo()
  {
    VersionInfoImpl versionInfo = new VersionInfoImpl();
    return versionInfo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public URL createURL()
  {
    URLImpl url = new URLImpl();
    return url;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public COMMENT createCOMMENT()
  {
    COMMENTImpl comment = new COMMENTImpl();
    return comment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DependenciesComp createDependenciesComp()
  {
    DependenciesCompImpl dependenciesComp = new DependenciesCompImpl();
    return dependenciesComp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Feature createFeature()
  {
    FeatureImpl feature = new FeatureImpl();
    return feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IDF createIDF()
  {
    IDFImpl idf = new IDFImpl();
    return idf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public COMPONENT_NAME createCOMPONENT_NAME()
  {
    COMPONENT_NAMEImpl componenT_NAME = new COMPONENT_NAMEImpl();
    return componenT_NAME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public COMPONENT_NAME_FEATURE createCOMPONENT_NAME_FEATURE()
  {
    COMPONENT_NAME_FEATUREImpl componenT_NAME_FEATURE = new COMPONENT_NAME_FEATUREImpl();
    return componenT_NAME_FEATURE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PUBLIC createPUBLIC()
  {
    PUBLICImpl public_ = new PUBLICImpl();
    return public_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OVERRIDE_PATH createOVERRIDE_PATH()
  {
    OVERRIDE_PATHImpl overridE_PATH = new OVERRIDE_PATHImpl();
    return overridE_PATH;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RULES createRULES()
  {
    RULESImpl rules = new RULESImpl();
    return rules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IDFComponentDslPackage getIDFComponentDslPackage()
  {
    return (IDFComponentDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static IDFComponentDslPackage getPackage()
  {
    return IDFComponentDslPackage.eINSTANCE;
  }

} //IDFComponentDslFactoryImpl
